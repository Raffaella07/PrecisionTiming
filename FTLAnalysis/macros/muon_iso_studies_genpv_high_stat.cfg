<draw>
plots comp_fake_vs_sig_vs_linden_wp0p05 comp_fake_vs_sig_vs_linden_wp0p10 \
      comp_fake_vs_sig_vs_linden_runwp \
      fake_vs_isocutZ fake_vs_isocutZT \
      eff_vs_isocutZ eff_vs_isocutZT \
      chIso comp_fake_vs_sig_vs_linden_vs_cut \
      roc_iso comp_t_resolution

saveAs pdf png root
plugins 'roc_utils.py' 'rootlogon.C' 'gStyle->SetOptStat("")' 
#outDir '$HOME/www/precision_timing/muon_iso/muon_iso_genpv_high_stat/'
outDir '$HOME/www/precision_timing/muon_iso/muon_iso_genpv_dz2mm_check/' 
</draw>

dymm_src_30ps '../ntuples/dymm_high_stat_200PU.root' 'sig:muon_tree_30'
qcd_src_30ps '../ntuples/qcd_high_stat_200PU.root' 'fake:muon_tree_30'
dymm_src_50ps '../ntuples/dymm_high_stat_200PU.root' 'sig:muon_tree_50'
qcd_src_50ps '../ntuples/qcd_high_stat_200PU.root' 'fake:muon_tree_50'
dymm_src_70ps '../ntuples/dymm_high_stat_200PU.root' 'sig:muon_tree_70'
qcd_src_70ps '../ntuples/qcd_high_stat_200PU.root' 'fake:muon_tree_70'
dymm_src_90ps '../ntuples/dymm_high_stat_200PU.root' 'sig:muon_tree_90'
qcd_src_90ps '../ntuples/qcd_high_stat_200PU.root' 'fake:muon_tree_90'
dymm_src_150ps '../ntuples/dymm_high_stat_200PU.root' 'sig:muon_tree_150'
qcd_src_150ps '../ntuples/qcd_high_stat_200PU.root' 'fake:muon_tree_150'

dymm_src_0PU '../ntuples/.root' 'sig:muon_tree_notiming'
qcd_src_0PU '../ntuples/qcd_high_stat_0PU.root' 'fake:muon_tree_30'

# dymm_src_30ps '../ntuples/muon_iso_dymm_genpv.root' 'sig:muon_tree_0.030000'
# qcd_src_30ps '../ntuples/muon_iso_qcd_genpv.root' 'fake:muon_tree_0.030000'

dymm_src= '../ntuples/muon_iso_zmm_200PU_dz2mm.rootmuon_iso_zmm_200PU_dz2mm.root' 'sig:muon_tree_30'
#dymm_src_30ps
qcd_src= qcd_src_30ps

dymm_src_notime '../ntuples/dymm_high_stat_200PU.root' 'sig:muon_tree_notiming'
qcd_src_notime '../ntuples/qcd_high_stat_200PU.root' 'fake:muon_tree_notiming'

<roc_iso_stdmuonsys_DR0p3>
legendHeader '200 PU, loose muon, p_{T}>15 GeV, |#eta|<2.4'
legendXY 0.2 0.5 0.5 0.9
histos z_cut
#zt_cut
#noPU

# 200 PU, Z cut onlyx
<z_cut>
        src+= dymm_src_notime qcd_src_notime
        operation 'AbsRateVsEff(sig, fake, "fabs[dz]<0.5 && fabs[dxy]<0.1 && genMatchedPrompt==1 && fabs[eta] < 2.4 && pt > 15 && isLooseMuon", "fabs[dz]<0.5 && fabs[dxy]<0.1 && fabs[eta] < 2.4 && pt > 15 && isLooseMuon", "chIsoZCut[0]/pt" , 100, 0, 0.5)'
        customize 'SetTitle(";#epsilon_{prompt};#epsilon_{non-prompt};")' \
                  'SetLineColor(kBlue+1)' 'SetFillColorAlpha(kCyan+2, 0.3)' 'SetFillStyle(3002)' 'SetLineWidth(3)' \
                  'GetXaxis()->SetLimits(0.8, 1)' 'GetYaxis()->SetRangeUser(0, 0.1)' \
                  'GetXaxis()->SetNdivisions(507)' 'GetYaxis()->SetNdivisions(507)'
        legendEntry 'w/o timing' 'fl'
        drawOptions 'ALE3'
</z_cut>

# 200 PU, ZT cut
<zt_cut>
        src+= dymm_src qcd_src
        operation 'AbsRateVsEff(sig, fake, "fabs[dz]<0.5 && fabs[dxy]<0.1 && genMatchedPrompt==1 && fabs[eta] < 2.4 && pt > 15 && isLooseMuon", "fabs[dz]<0.5 && fabs[dxy]<0.1 && fabs[eta] < 2.4 && pt > 15 && isLooseMuon", "chIsoZTCut_3sigma[0]/pt" , 100, 0, 0.5)'
        customize 'SetLineColor(kRed+3)' 'SetFillColorAlpha(kRed+1, 0.3)' 'SetFillStyle(3344)' 'SetLineWidth(3)' 
        legendEntry 'w/ timing, #sigma_{t} = 30ps, #DeltaR = 0.3' 'fl'
        drawOptions 'LE3'
</zt_cut>

# no PU, use Z cut only
<noPU>
        src+= dymm_src_0PU qcd_src_0PU
        operation 'AbsRateVsEff(sig, fake, "chIsoDR < 0.35 && genMatchedPrompt==1 && eta > -2.4 && eta < 2.4 && pt > 20", "chIsoDR < 0.35 && genMatchedJet==1 && eta > -2.4 && eta < 2.4 && pt > 20", "chIsoZCut[0]/pt" , 10, 0, 1)'
        customize 'SetFillColorAlpha(kBlack, 0.3)' 'SetFillStyle(3344)' 'SetLineWidth(3)' 
        legendEntry 'no PU' 'fl'                
        drawOptions 'LE3'
</noPU>

</roc_iso_stdmuonsys_DR0p3>

<roc_iso_stdmuonsys_DR0p4= roc_iso_stdmuonsys_DR0p3>
zt_cut.operation 'AbsRateVsEff(sig, fake, "fabs[dz]<0.5 && fabs[dxy]<0.1 && genMatchedPrompt==1 && fabs[eta] < 2.4 && pt > 15 && isLooseMuon", "fabs[dz]<0.5 && fabs[dxy]<0.1 && fabs[eta] < 2.4 && pt > 15 && isLooseMuon", "chIsoZTCut_3sigma[1]/pt" , 100, 0, 0.5)'
zt_cut.legendEntry 'w/ timing, #sigma_{t} = 30ps, #DeltaR = 0.4' 'fl'
</roc_iso_stdmuonsys_DR0p4>

<roc_iso_gem_DR0p3= roc_iso_stdmuonsys_DR0p3>
legendHeader '200 PU, loose muon, p_{T}>15 GeV, 2.4<|#eta|<2.8'
z_cut.operation 'AbsRateVsEff(sig, fake, "fabs[dz]<0.5 && fabs[dxy]<0.1 && genMatchedPrompt==1 && fabs[eta] >= 2.4 && fabs[eta] < 2.8 && pt > 15 && isLooseMuon", "fabs[dz]<0.5 && fabs[dxy]<0.1 && fabs[eta] >= 2.4 && fabs[eta] < 2.8 && pt > 15 && isLooseMuon", "chIsoZCut[0]/pt" , 100, 0, 0.5)'
zt_cut.operation 'AbsRateVsEff(sig, fake, "fabs[dz]<0.5 && fabs[dxy]<0.1 && genMatchedPrompt==1 && fabs[eta] >= 2.4 && fabs[eta] < 2.8 && pt > 15 && isLooseMuon", "fabs[dz]<0.5 && fabs[dxy]<0.1 && fabs[eta] >= 2.4 && fabs[eta] < 2.8 && pt > 15 && isLooseMuon", "chIsoZTCut_3sigma[0]/pt" , 100, 0, 0.5)'
</roc_iso_gem_DR0p3>

<roc_iso_gem_DR0p4= roc_iso_gem_DR0p3>
zt_cut.operation 'AbsRateVsEff(sig, fake, "fabs[dz]<0.5 && fabs[dxy]<0.1 && genMatchedPrompt==1 && fabs[eta] >= 2.4 && fabs[eta] < 2.8 && pt > 15 && isLooseMuon", "fabs[dz]<0.5 && fabs[dxy]<0.1 && fabs[eta] >= 2.4 && fabs[eta] < 2.8 && pt > 15 && isLooseMuon", "chIsoZTCut_3sigma[1]/pt" , 100, 0, 0.5)'
zt_cut.legendEntry 'w/ timing, #sigma_{t} = 30ps, #DeltaR = 0.4' 'fl'
</roc_iso_gem_DR0p4>


###---selection optimization
###---Z iso
<eff_vs_isocutZ>
customize 'macro:line.SetLineColor(kGray+1);line.SetLineStyle(7);line.SetLineWidth(2);line.DrawLine(0, 0.95, 0.5, 0.95)'
histos linden1 linden2 linden3 linden4
<linden1>
        src+= dymm_src_notime
        operation 'EffScan(sig)'
        var 'chIsoZCut/pt'
        cut 'chIsoDR < 0.35 && genMatchedPrompt==1 && fabs(eta) < 2.4 && pt > 20 && abs(vtxZ) <= 2.0'
        bins 5000 0 0.5
        customize 'SetTitle(";Iso_{ch};#epsilon_{prompt};")' 'SetLineColor(kMagenta)' \
                  'SetAxisRange(0, 1.1)' 'SetMarkerSize(0)' 'GetXaxis()->SetNdivisions(507)'
        drawOptions 'HIST'
</linden1>
<linden2= eff_vs_isocutZ.linden1>
        cut 'chIsoDR < 0.35 && genMatchedPrompt==1 && fabs(eta) < 2.4 && pt > 20 && abs(vtxZ) <= 4.0 && abs(vtxZ) > 2.0'
        customize+= 'SetLineColor(kMagenta+1)'
</linden2>
<linden3= eff_vs_isocutZ.linden1>
        cut 'chIsoDR < 0.35 && genMatchedPrompt==1 && fabs(eta) < 2.4 && pt > 20 && abs(vtxZ) <= 6.0 && abs(vtxZ) > 4.0'
        customize+= 'SetLineColor(kMagenta+2)'
</linden3>
<linden4= eff_vs_isocutZ.linden1>
        cut 'chIsoDR < 0.35 && genMatchedPrompt==1 && fabs(eta) < 2.4 && pt > 20 && abs(vtxZ) > 6.0'
        customize+= 'SetLineColor(kMagenta+3)'
</linden4>
</eff_vs_isocutZ>

###---ZT iso
<eff_vs_isocutZT>
customize 'macro:line.SetLineColor(kGray+1);line.SetLineStyle(7);line.SetLineWidth(2);line.DrawLine(0, 0.95, 0.5, 0.95)'
histos linden1 linden2 linden3 linden4
<linden1>
        src+= dymm_src
        operation 'EffScan(sig)'
        var 'chIsoZTCut_3sigma/pt'
        cut 'chIsoDR < 0.35 && genMatchedPrompt==1 && fabs(eta) < 2.4 && pt > 20 && abs(vtxZ) <= 2.0'
        bins 5000 0 0.5
        customize 'SetTitle(";Iso_{ch};#epsilon_{prompt};")' 'SetLineColor(kMagenta)' \
                  'SetAxisRange(0, 1.1)' 'SetMarkerSize(0)' 'GetXaxis()->SetNdivisions(507)'
        drawOptions 'HIST'
</linden1>
<linden2= eff_vs_isocutZT.linden1>
        cut 'chIsoDR < 0.35 && genMatchedPrompt==1 && fabs(eta) < 2.4 && pt > 20 && abs(vtxZ) <= 4.0 && abs(vtxZ) > 2.0'
        customize+= 'SetLineColor(kMagenta+1)'
</linden2>
<linden3= eff_vs_isocutZT.linden1>
        cut 'chIsoDR < 0.35 && genMatchedPrompt==1 && fabs(eta) < 2.4 && pt > 20 && abs(vtxZ) <= 6.0 && abs(vtxZ) > 4.0'
        customize+= 'SetLineColor(kMagenta+2)'
</linden3>
<linden4= eff_vs_isocutZT.linden1>
        cut 'chIsoDR < 0.35 && genMatchedPrompt==1 && fabs(eta) < 2.4 && pt > 20 && abs(vtxZ) > 6.0'
        customize+= 'SetLineColor(kMagenta+3)'
</linden4>
</eff_vs_isocutZT>

### fake rate, eff comp
linden_bins 0.0 0.788561 1.14142 1.42500 1.54

<comp_fake_vs_sig_vs_linden_wp0p05>
customize 'macro:gStyle->SetErrorX(0.5)'
legendHeader 'WP=0.05'
legendXY 0.2 0.4 0.6 0.7
histos eff_noFTL eff_FTL fake_rate_noFTL fake_rate_FTL

<num_fake_rate_noFTL>
        src= qcd_src_notime
        var '200*TMath::Gaus(abs(10*vtxZ), 0, 52., 1)'
        cut 'chIsoDR < 0.35 && genMatchedPrompt==0 && genMatchedJet==1 && fabs(eta) < 2.4 && pt>20 && chIsoZCut/pt<0.05'
        dbins linden_bins
</num_fake_rate_noFTL>
<den_fake_rate_noFTL= comp_fake_vs_sig_vs_linden_wp0p05.num_fake_rate_noFTL>
        cut 'chIsoDR < 0.35 && genMatchedPrompt==0 && genMatchedJet==1 && fabs(eta) < 2.4 && pt>20'
</den_fake_rate_noFTL>
<num_fake_rate_FTL= comp_fake_vs_sig_vs_linden_wp0p05.num_fake_rate_noFTL>
        src= qcd_src
        cut 'chIsoDR < 0.35 && genMatchedPrompt==0 && genMatchedJet==1 && fabs(eta) < 2.4 && pt>20 && chIsoZTCut_3sigma/pt<0.05'
</num_fake_rate_FTL>
<den_fake_rate_FTL= comp_fake_vs_sig_vs_linden_wp0p05.num_fake_rate_FTL>
        cut 'chIsoDR < 0.35 && genMatchedPrompt==0 && genMatchedJet==1 && fabs(eta) < 2.4 && pt>20'
</den_fake_rate_FTL>

<num_eff_noFTL>
        src= dymm_src_notime
        var '200*TMath::Gaus(abs(10*vtxZ), 0, 52., 1)'
        cut 'chIsoDR < 0.35 && genMatchedPrompt==1 && fabs(eta) < 2.4 && pt>20 && chIsoZCut/pt<0.05'
        dbins linden_bins
</num_eff_noFTL>
<den_eff_noFTL= comp_fake_vs_sig_vs_linden_wp0p05.num_eff_noFTL>
        cut 'chIsoDR < 0.35 && genMatchedPrompt==1 && fabs(eta) < 2.4 && pt>20'
</den_eff_noFTL>
<num_eff_FTL= comp_fake_vs_sig_vs_linden_wp0p05.num_eff_noFTL>
        src= dymm_src
        cut 'chIsoDR < 0.35 && genMatchedPrompt==1 && fabs(eta) < 2.4 && pt>20 && chIsoZTCut_3sigma/pt<0.05'
</num_eff_FTL>
<den_eff_FTL= comp_fake_vs_sig_vs_linden_wp0p05.num_eff_FTL>
        cut 'chIsoDR < 0.35 && genMatchedPrompt==1 && fabs(eta) < 2.4 && pt>20'
</den_eff_FTL>

<eff_noFTL>
        src num:comp_fake_vs_sig_vs_linden_wp0p05.num_eff_noFTL den:comp_fake_vs_sig_vs_linden_wp0p05.den_eff_noFTL
        operation 'Eff(num, den)'
        customize 'SetTitle(";Density (events / mm);track isolation efficiency")' 
        legendEntry 'Z#rightarrow #mu^{-}#mu^{+}, 200PU' 'pl'
        drawOptions 'APE'
</eff_noFTL>        
<eff_FTL>
        src num:comp_fake_vs_sig_vs_linden_wp0p05.num_eff_FTL den:comp_fake_vs_sig_vs_linden_wp0p05.den_eff_FTL
        operation 'Eff(num, den)'
        customize 'SetLineColor(kRed+1)' 'SetMarkerColor(kRed+1)'
        legendEntry 'Z#rightarrow #mu^{-}#mu^{+}, 200PU timing' 'pl'
        drawOptions 'PE'
</eff_FTL>

<fake_rate_noFTL>
        src num:comp_fake_vs_sig_vs_linden_wp0p05.num_fake_rate_noFTL den:comp_fake_vs_sig_vs_linden_wp0p05.den_fake_rate_noFTL
        operation 'Eff(num, den)'
        customize 'SetTitle(";Density (events / mm);track isolation efficiency")' 'SetMarkerStyle(kOpenCircle)'
        legendEntry 't#bar{t}, 200PU' 'pl'
        drawOptions 'PE'
</fake_rate_noFTL>        
<fake_rate_FTL>
        src num:comp_fake_vs_sig_vs_linden_wp0p05.num_fake_rate_FTL den:comp_fake_vs_sig_vs_linden_wp0p05.den_fake_rate_FTL
        operation 'Eff(num, den)'
        customize 'SetLineColor(kRed+1)' 'SetMarkerColor(kRed+1)' 'SetMarkerStyle(kOpenCircle)'
        legendEntry 't#bar{t}, 200PU timing' 'pl'
        drawOptions 'PE'
</fake_rate_FTL>

</comp_fake_vs_sig_vs_linden_wp0p05>

<comp_fake_vs_sig_vs_linden_wp0p10= comp_fake_vs_sig_vs_linden_wp0p05>
legendHeader 'WP=0.1'
num_fake_rate_noFTL.cut 'chIsoDR < 0.35 && genMatchedPrompt==0 && genMatchedJet==1 && fabs(eta) < 2.4 && pt>20 && chIsoZCut/pt<0.1'
num_fake_rate_FTL.cut 'chIsoDR < 0.35 && genMatchedPrompt==0 && genMatchedJet==1 && fabs(eta) < 2.4 && pt>20 && chIsoZTCut_3sigma/pt<0.1'
num_eff_noFTL.cut 'chIsoDR < 0.35 && genMatchedPrompt==1 && fabs(eta) < 2.4 && pt>20 && chIsoZCut/pt<0.1'
num_eff_FTL.cut 'chIsoDR < 0.35 && genMatchedPrompt==1 && fabs(eta) < 2.4 && pt>20 && chIsoZTCut_3sigma/pt<0.1'
eff_noFTL.src num:comp_fake_vs_sig_vs_linden_wp0p10.num_eff_noFTL den:comp_fake_vs_sig_vs_linden_wp0p10.den_eff_noFTL
eff_FTL.src num:comp_fake_vs_sig_vs_linden_wp0p10.num_eff_FTL den:comp_fake_vs_sig_vs_linden_wp0p10.den_eff_FTL
fake_rate_noFTL.src num:comp_fake_vs_sig_vs_linden_wp0p10.num_fake_rate_noFTL den:comp_fake_vs_sig_vs_linden_wp0p10.den_fake_rate_noFTL
fake_rate_FTL.src num:comp_fake_vs_sig_vs_linden_wp0p10.num_fake_rate_FTL den:comp_fake_vs_sig_vs_linden_wp0p10.den_fake_rate_FTL
</comp_fake_vs_sig_vs_linden_wp0p10>

<comp_fake_vs_sig_vs_linden_runwp= comp_fake_vs_sig_vs_linden_wp0p05>
legendXY 0.2 0.6 0.6 0.9
legendHeader 'Running WP (#epsilon_{prompt} = 95%)' 
## DR 0.3
num_fake_rate_noFTL.cut 'chIsoDR < 0.35 && genMatchedPrompt==0 && genMatchedJet==1 && fabs(eta) < 2.4 && pt>20 && ((abs(vtxZ) <= 2.0 && chIsoZCut/pt<0.087) || (abs(vtxZ) <= 4.0 && abs(vtxZ) > 2.0 && chIsoZCut/pt<0.085) || (abs(vtxZ) <= 6.0 && abs(vtxZ) > 4.0 && chIsoZCut/pt<0.070) || (abs(vtxZ) > 6.0 && chIsoZCut/pt<0.059))'
num_fake_rate_FTL.cut 'chIsoDR < 0.35 && genMatchedPrompt==0 && genMatchedJet==1 && fabs(eta) < 2.4 && pt>20 && ((abs(vtxZ) <= 2.0 && chIsoZTCut_3sigma/pt<0.063) || (abs(vtxZ) <= 4.0 && abs(vtxZ) > 2.0 && chIsoZTCut_3sigma/pt<0.064) || (abs(vtxZ) <= 6.0 && abs(vtxZ) > 4.0 && chIsoZTCut_3sigma/pt<0.059) || (abs(vtxZ) > 6.0 && chIsoZTCut_3sigma/pt<0.053))'
num_eff_noFTL.cut 'chIsoDR < 0.35 && genMatchedPrompt==1 && fabs(eta) < 2.4 && pt>20 && ((abs(vtxZ) <= 2.0 && chIsoZCut/pt<0.087) || (abs(vtxZ) <= 4.0 && abs(vtxZ) > 2.0 && chIsoZCut/pt<0.085) || (abs(vtxZ) <= 6.0 && abs(vtxZ) > 4.0 && chIsoZCut/pt<0.070) || (abs(vtxZ) > 6.0 && chIsoZCut/pt<0.059))'
num_eff_FTL.cut 'chIsoDR < 0.35 && genMatchedPrompt==1 && fabs(eta) < 2.4 && pt>20 && ((abs(vtxZ) <= 2.0 && chIsoZTCut_3sigma/pt<0.063) || (abs(vtxZ) <= 4.0 && abs(vtxZ) > 2.0 && chIsoZTCut_3sigma/pt<0.064) || (abs(vtxZ) <= 6.0 && abs(vtxZ) > 4.0 && chIsoZTCut_3sigma/pt<0.059) || (abs(vtxZ) > 6.0 && chIsoZTCut_3sigma/pt<0.053))'

eff_noFTL.src num:comp_fake_vs_sig_vs_linden_runwp.num_eff_noFTL den:comp_fake_vs_sig_vs_linden_runwp.den_eff_noFTL
eff_noFTL.customize+= 'GetYaxis()->SetRangeUser(0, 0.15)'
eff_noFTL.legendEntry ''
eff_FTL.src num:comp_fake_vs_sig_vs_linden_runwp.num_eff_FTL den:comp_fake_vs_sig_vs_linden_runwp.den_eff_FTL
eff_FTL.legendEntry ''
fake_rate_noFTL.src num:comp_fake_vs_sig_vs_linden_runwp.num_fake_rate_noFTL den:comp_fake_vs_sig_vs_linden_runwp.den_fake_rate_noFTL
fake_rate_FTL.src num:comp_fake_vs_sig_vs_linden_runwp.num_fake_rate_FTL den:comp_fake_vs_sig_vs_linden_runwp.den_fake_rate_FTL
</comp_fake_vs_sig_vs_linden_runwp>

### chIsoZ chIsoZT comparison
<chIso>
#customize SetLogy()
legendXY 0.4 0.5 0.8 0.9
histos chIsoZ_dymm chIsoZT_dymm chIsoZ_qcd chIsoZT_qcd 
<chIsoZ_dymm>
        src= dymm_src_notime
        var 'chIsoZCut/pt'
        cut 'pt>20 && abs(eta)<5 && chIsoDR < 0.35 && genMatchedPrompt==1'
        bins 15 0 0.5
        customize 'SetTitle(";Iso/pt")' 'Scale(1./this->GetEntries())' 'GetYaxis()->SetLimits(0.001, 1.1)'
        legendEntry 'Z#rightarrow #mu^{-}#mu^{+}, w/o timing' 'l'        
        drawOptions HIST
</chIsoZ_dymm>
<chIsoZT_dymm= chIso.chIsoZ_dymm>
        src= dymm_src
        var 'chIsoZTCut_3sigma/pt'
        customize+= 'SetLineStyle(7)'
        legendEntry 'Z#rightarrow #mu^{-}#mu^{+}, w/ timing' 'l'                
</chIsoZT_dymm>
<chIsoZ_qcd>
        src= qcd_src_notime
        var 'chIsoZCut/pt'
        cut 'pt>20 && abs(eta)<5 && chIsoDR < 0.35 && genMatchedPrompt==0 && genMatchedJet==1'
        bins 15 0 0.5
        customize 'SetTitle(";Iso/pt")' 'SetLineColor(kCyan+2)' 'Scale(1./this->GetEntries())' 'GetYaxis()->SetLimits(0.001, 1.1)'
        legendEntry 't#bar{t}, w/o timing' 'l'
        drawOptions HIST
</chIsoZ_qcd>
<chIsoZT_qcd= chIso.chIsoZ_qcd>
        src= qcd_src
        var 'chIsoZTCut_3sigma/pt'
        customize+= 'SetLineColor(kOrange+2)'
        legendEntry 't#bar{t}, w/ timing' 'l' 
</chIsoZT_qcd>
</chIso>

###---fake rate vs iso
###---Z iso
<fake_vs_isocutZ>
customize 'SetGrid()'
#customize 'macro:line.SetLineColor(kGray+1);line.SetLineStyle(7);line.SetLineWidth(2);line.DrawLine(0, 0.95, 0.5, 0.95)'
histos linden1 linden2 linden3 linden4
<linden1>
        src+= qcd_src_notime
        operation 'EffScan(fake)'
        var '(chIsoZCut/pt<0.5)*chIsoZCut/pt + 0.45*(chIsoZCut/pt>=0.5)'
        cut 'chIsoDR < 0.35 && genMatchedPrompt==0 && genMatchedJet==1 && fabs(eta) < 2.4 && pt > 20 && abs(vtxZ) <= 2.0'
        bins 5000 0 0.5
        customize 'SetTitle(";Iso_{ch};#epsilon_{prompt};")' 'SetLineColor(kMagenta)' \
                  'SetAxisRange(0, 1.1)' 'SetMarkerSize(0)' 'GetXaxis()->SetNdivisions(507)'
        drawOptions 'HIST'
</linden1>
<linden2= fake_vs_isocutZ.linden1>
        cut 'chIsoDR < 0.35 && genMatchedPrompt==0 && genMatchedJet==1 && fabs(eta) < 2.4 && pt > 20 && abs(vtxZ) <= 4.0 && abs(vtxZ) > 2.0'
        customize+= 'SetLineColor(kMagenta+1)'
</linden2>
<linden3= fake_vs_isocutZ.linden1>
        cut 'chIsoDR < 0.35 && genMatchedPrompt==0 && genMatchedJet==1 && fabs(eta) < 2.4 && pt > 20 && abs(vtxZ) <= 6.0 && abs(vtxZ) > 4.0'
        customize+= 'SetLineColor(kMagenta+2)'
</linden3>
<linden4= fake_vs_isocutZ.linden1>
        cut 'chIsoDR < 0.35 && genMatchedPrompt==0 && genMatchedJet==1 && fabs(eta) < 2.4 && pt > 20 && abs(vtxZ) > 6.0'
        customize+= 'SetLineColor(kMagenta+3)'
</linden4>
</fake_vs_isocutZ>

###---ZT iso
<fake_vs_isocutZT>
customize 'SetGrid()'
#'macro:line.SetLineColor(kGray+1);line.SetLineStyle(7);line.SetLineWidth(2);line.DrawLine(0, 0.95, 0.5, 0.95)'
histos linden1 linden2 linden3 linden4
<linden1>
        src= qcd_src
        operation 'EffScan(fake)'
        var '(chIsoZTCut_3sigma/pt<0.5)*chIsoZTCut_3sigma/pt + 0.45*(chIsoZTCut_3sigma/pt>=0.5)'
        cut 'chIsoDR < 0.35 && genMatchedPrompt==0 && genMatchedJet==1 && fabs(eta) < 2.4 && pt > 20 && abs(vtxZ) <= 2.0'
        bins 5000 0 0.5
        customize 'SetTitle(";Iso_{ch};#epsilon_{prompt};")' 'SetLineColor(kMagenta)' \
                  'SetAxisRange(0, 1.1)' 'SetMarkerSize(0)' 'GetXaxis()->SetNdivisions(507)'
        drawOptions 'HIST'
</linden1>
<linden2= fake_vs_isocutZT.linden1>
        cut 'chIsoDR < 0.35 && genMatchedPrompt==0 && genMatchedJet==1 && fabs(eta) < 2.4 && pt > 20 && abs(vtxZ) <= 4.0 && abs(vtxZ) > 2.0'
        customize+= 'SetLineColor(kMagenta+1)'
</linden2>
<linden3= fake_vs_isocutZT.linden1>
        cut 'chIsoDR < 0.35 && genMatchedPrompt==0 && genMatchedJet==1 && fabs(eta) < 2.4 && pt > 20 && abs(vtxZ) <= 6.0 && abs(vtxZ) > 4.0'
        customize+= 'SetLineColor(kMagenta+2)'
</linden3>
<linden4= fake_vs_isocutZT.linden1>
        cut 'chIsoDR < 0.35 && genMatchedPrompt==0 && genMatchedJet==1 && fabs(eta) < 2.4 && pt > 20 && abs(vtxZ) > 6.0'
        customize+= 'SetLineColor(kMagenta+3)'
</linden4>
</fake_vs_isocutZT>

### Effect of resolution
#   For now just loose the cut on dT
<comp_fake_vs_sig_vs_linden_vs_cut>
customize 'macro:gStyle->SetErrorX(0.5)'
legendHeader 'WP=0.05 -- 200PU'
legendXY 0.2 0.4 0.6 0.7
histos eff_noFTL eff_FTL_3s eff_FTL_7s eff_FTL_10s fake_rate_noFTL fake_rate_FTL_3s fake_rate_FTL_7s fake_rate_FTL_10s

<num_fake_rate_noFTL>
        src= qcd_src_notime
        var '200*TMath::Gaus(abs(10*vtxZ), 0, 52., 1)'
        cut 'chIsoDR < 0.35 && genMatchedPrompt==0 && genMatchedJet==1 && fabs(eta) < 2.4 && pt>20 && chIsoZCut/pt<0.05'
        dbins linden_bins
</num_fake_rate_noFTL>
<den_fake_rate_noFTL= num_fake_rate_noFTL>
        cut 'chIsoDR < 0.35 && genMatchedPrompt==0 && genMatchedJet==1 && fabs(eta) < 2.4 && pt>20'
</den_fake_rate_noFTL>
<num_fake_rate_FTL_3s= num_fake_rate_noFTL>
        src= qcd_src
        cut 'chIsoDR < 0.35 && genMatchedPrompt==0 && genMatchedJet==1 && fabs(eta) < 2.4 && pt>20 && chIsoZTCut_3sigma/pt<0.05'
</num_fake_rate_FTL_3s>
<num_fake_rate_FTL_7s= num_fake_rate_FTL_3sigma>
        cut 'chIsoDR < 0.35 && genMatchedPrompt==0 && genMatchedJet==1 && fabs(eta) < 2.4 && pt>20 && chIsoZTCut_7sigma/pt<0.05'
</num_fake_rate_FTL_7s>
<num_fake_rate_FTL_10s= num_fake_rate_FTL_3sigma>
        cut 'chIsoDR < 0.35 && genMatchedPrompt==0 && genMatchedJet==1 && fabs(eta) < 2.4 && pt>20 && chIsoZTCut_10sigma/pt<0.05'
</num_fake_rate_FTL_10s>
<den_fake_rate_FTL= num_fake_rate_FTL_3sigma>
        cut 'chIsoDR < 0.35 && genMatchedPrompt==0 && genMatchedJet==1 && fabs(eta) < 2.4 && pt>20'
</den_fake_rate_FTL>

<num_eff_noFTL>
        src= dymm_src_notime
        var '200*TMath::Gaus(abs(10*vtxZ), 0, 52., 1)'
        cut 'chIsoDR < 0.35 && genMatchedPrompt==1 && fabs(eta) < 2.4 && pt>20 && chIsoZCut/pt<0.05'
        dbins linden_bins
</num_eff_noFTL>
<den_eff_noFTL= num_eff_noFTL>
        cut 'chIsoDR < 0.35 && genMatchedPrompt==1 && fabs(eta) < 2.4 && pt>20'
</den_eff_noFTL>
<num_eff_FTL_3s= num_eff_noFTL>
        src= dymm_src                       
        cut 'chIsoDR < 0.35 && genMatchedPrompt==1 && fabs(eta) < 2.4 && pt>20 && chIsoZTCut_3sigma/pt<0.05'
</num_eff_FTL_3s>
<num_eff_FTL_7s= num_eff_FTL_3sigma>
        cut 'chIsoDR < 0.35 && genMatchedPrompt==1 && fabs(eta) < 2.4 && pt>20 && chIsoZTCut_7sigma/pt<0.05'
</num_eff_FTL_7s>
<num_eff_FTL_10s= num_eff_FTL_3sigma>
        cut 'chIsoDR < 0.35 && genMatchedPrompt==1 && fabs(eta) < 2.4 && pt>20 && chIsoZTCut_10sigma/pt<0.05'
</num_eff_FTL_10s>
<den_eff_FTL= num_eff_FTL_3sigma>
        cut 'chIsoDR < 0.35 && genMatchedPrompt==1 && fabs(eta) < 2.4 && pt>20'
</den_eff_FTL>

<eff_noFTL>
        src num:comp_fake_vs_sig_vs_linden_vs_cut.num_eff_noFTL den:comp_fake_vs_sig_vs_linden_vs_cut.den_eff_noFTL
        operation 'Eff(num, den)'
        customize 'SetTitle(";Density (events / mm);track isolation efficiency")' 'SetMarkerSize(1.4)'
        legendEntry 'Z#rightarrow #mu^{-}#mu^{+}, w/o timing' 'pl'
        drawOptions 'APE'
</eff_noFTL>        
<eff_FTL_3s>
        src num:comp_fake_vs_sig_vs_linden_vs_cut.num_eff_FTL_3s den:comp_fake_vs_sig_vs_linden_vs_cut.den_eff_FTL
        operation 'Eff(num, den)'
        customize 'SetLineColor(kRed)' 'SetMarkerColor(kRed)'
        legendEntry 'Z#rightarrow #mu^{-}#mu^{+}, 3#sigma' 'pl'
        drawOptions 'PE'
</eff_FTL_3s>
<eff_FTL_7s>
        src num:comp_fake_vs_sig_vs_linden_vs_cut.num_eff_FTL_7s den:comp_fake_vs_sig_vs_linden_vs_cut.den_eff_FTL
        operation 'Eff(num, den)'
        customize 'SetLineColor(kRed+1)' 'SetMarkerColor(kRed+1)'
        legendEntry 'Z#rightarrow #mu^{-}#mu^{+}, 7#sigma' 'pl'
        drawOptions 'PE'
</eff_FTL_7s>
<eff_FTL_10s>
        src num:comp_fake_vs_sig_vs_linden_vs_cut.num_eff_FTL_10s den:comp_fake_vs_sig_vs_linden_vs_cut.den_eff_FTL
        operation 'Eff(num, den)'
        customize 'SetLineColor(kRed+2)' 'SetMarkerColor(kRed+2)'
        legendEntry 'Z#rightarrow #mu^{-}#mu^{+}, 20#sigma' 'pl'
        drawOptions 'PE'
</eff_FTL_10s>

<fake_rate_noFTL>
        src num:comp_fake_vs_sig_vs_linden_vs_cut.num_fake_rate_noFTL den:comp_fake_vs_sig_vs_linden_vs_cut.den_fake_rate_noFTL
        operation 'Eff(num, den)'
        customize 'SetTitle(";Density (events / mm);track isolation efficiency")' 'SetMarkerStyle(kOpenCircle)' 'SetMarkerSize(1.4)'
        legendEntry 't#bar{t}, 200PU' 'pl'
        drawOptions 'PE'
</fake_rate_noFTL>        
<fake_rate_FTL_3s>
        src num:comp_fake_vs_sig_vs_linden_vs_cut.num_fake_rate_FTL_3s den:comp_fake_vs_sig_vs_linden_vs_cut.den_fake_rate_FTL
        operation 'Eff(num, den)'
        customize 'SetLineColor(kRed)' 'SetMarkerColor(kRed)' 'SetMarkerStyle(kOpenCircle)'
        legendEntry 't#bar{t}, 3#sigma' 'pl'
        drawOptions 'PE'
</fake_rate_FTL_3s>       
<fake_rate_FTL_7s>
        src num:comp_fake_vs_sig_vs_linden_vs_cut.num_fake_rate_FTL_7s den:comp_fake_vs_sig_vs_linden_vs_cut.den_fake_rate_FTL
        operation 'Eff(num, den)'
        customize 'SetLineColor(kRed+1)' 'SetMarkerColor(kRed+1)' 'SetMarkerStyle(kOpenCircle)'
        legendEntry 't#bar{t}, 7#sigma' 'pl'
        drawOptions 'PE'
</fake_rate_FTL_7s>       
<fake_rate_FTL_10s>
        src num:comp_fake_vs_sig_vs_linden_vs_cut.num_fake_rate_FTL_10s den:comp_fake_vs_sig_vs_linden_vs_cut.den_fake_rate_FTL
        operation 'Eff(num, den)'
        customize 'SetLineColor(kRed+2)' 'SetMarkerColor(kRed+2)' 'SetMarkerStyle(kOpenCircle)'
        legendEntry 't#bar{t}, 20#sigma' 'pl'
        drawOptions 'PE'
</fake_rate_FTL_10s>

</comp_fake_vs_sig_vs_linden_vs_cut>

### compare different track time resolution
<comp_t_resolution>
customize 'macro:gStyle->SetErrorX(0.5)'
legendHeader 'Z\rightarrow\mu^{-}\mu^{+} -- 200PU'
#legendHeader 'WP=0.05 -- 200PU'
legendXY 0.2 0.2 0.6 0.5
histos eff_noFTL eff_FTL_30ps eff_FTL_50ps eff_FTL_70ps eff_FTL_90ps 
#       fake_rate_noFTL fake_rate_FTL_30ps fake_rate_FTL_50ps fake_rate_FTL_70ps fake_rate_FTL_90ps

<num_fake_rate_noFTL>
        src= qcd_src_20ps
        var '200*TMath::Gaus(abs(10*vtxZ), 0, 52., 1)'
        cut 'chIsoDR < 0.35 && genMatchedPrompt==0 && genMatchedJet==1 && fabs(eta) < 2.4 && pt>20 && chIsoZCut/pt<0.088'
        dbins linden_bins
</num_fake_rate_noFTL>
<den_fake_rate_noFTL= num_fake_rate_noFTL>
        cut 'chIsoDR < 0.35 && genMatchedPrompt==0 && genMatchedJet==1 && fabs(eta) < 2.4 && pt>20'
</den_fake_rate_noFTL>
<num_fake_rate_FTL_30ps= num_fake_rate_noFTL>
        src= qcd_src_30ps
        cut 'chIsoDR < 0.35 && genMatchedPrompt==0 && genMatchedJet==1 && fabs(eta) < 2.4 && pt>20 && chIsoZTCut_3sigma/pt<0.088'
</num_fake_rate_FTL_30ps>
<num_fake_rate_FTL_50ps= num_fake_rate_noFTL>
        src= qcd_src_50ps
        cut 'chIsoDR < 0.35 && genMatchedPrompt==0 && genMatchedJet==1 && fabs(eta) < 2.4 && pt>20 && chIsoZTCut_3sigma/pt<0.088'
</num_fake_rate_FTL_50ps>
<num_fake_rate_FTL_70ps= num_fake_rate_noFTL>
        src= qcd_src_70ps
        cut 'chIsoDR < 0.35 && genMatchedPrompt==0 && genMatchedJet==1 && fabs(eta) < 2.4 && pt>20 && chIsoZTCut_3sigma/pt<0.088'
</num_fake_rate_FTL_70ps>
<num_fake_rate_FTL_90ps= num_fake_rate_noFTL>
        src= qcd_src_90ps
        cut 'chIsoDR < 0.35 && genMatchedPrompt==0 && genMatchedJet==1 && fabs(eta) < 2.4 && pt>20 && chIsoZTCut_3sigma/pt<0.088'
</num_fake_rate_FTL_90ps>
<den_fake_rate_FTL= num_fake_rate_30ps>
        cut 'chIsoDR < 0.35 && genMatchedPrompt==0 && genMatchedJet==1 && fabs(eta) < 2.4 && pt>20'
</den_fake_rate_FTL>

<num_eff_noFTL>
        src= dymm_src_20ps
        var '200*TMath::Gaus(abs(10*vtxZ), 0, 52., 1)'
        cut 'chIsoDR < 0.35 && genMatchedPrompt==1 && fabs(eta) < 2.4 && pt>20 && chIsoZCut/pt<0.088'
        dbins linden_bins
</num_eff_noFTL>
<num_eff_FTL_30ps= num_eff_noFTL>
        src= dymm_src_30ps
        cut 'chIsoDR < 0.35 && genMatchedPrompt==1 && fabs(eta) < 2.4 && pt>20 && chIsoZTCut_3sigma/pt<0.088'
</num_eff_FTL_30ps>
<num_eff_FTL_50ps= num_eff_noFTL>
        src= dymm_src_50ps
        cut 'chIsoDR < 0.35 && genMatchedPrompt==1 && fabs(eta) < 2.4 && pt>20 && chIsoZTCut_3sigma/pt<0.088'
</num_eff_FTL_50ps>
<num_eff_FTL_70ps= num_eff_noFTL>
        src= dymm_src_70ps
        cut 'chIsoDR < 0.35 && genMatchedPrompt==1 && fabs(eta) < 2.4 && pt>20 && chIsoZTCut_3sigma/pt<0.088'
</num_eff_FTL_70ps>
<num_eff_FTL_90ps= num_eff_noFTL>
        src= dymm_src_90ps
        cut 'chIsoDR < 0.35 && genMatchedPrompt==1 && fabs(eta) < 2.4 && pt>20 && chIsoZTCut_3sigma/pt<0.088'
</num_eff_FTL_90ps>
<den_eff= num_eff_noFTL>
        cut 'chIsoDR < 0.35 && genMatchedPrompt==1 && fabs(eta) < 2.4 && pt>20'
</den_eff>

<eff_noFTL>
        src num:comp_t_resolution.num_eff_noFTL den:comp_t_resolution.den_eff
        operation 'Eff(num, den)'
        customize 'SetTitle(";Density (events / mm);track isolation efficiency")'  'SetMarkerSize(1.2)' \
                  'GetYaxis()->SetRangeUser(0.8, 1.)' 'GetYaxis()->SetNdivisions(507)'
        #legendEntry 'Z#rightarrow #mu^{-}#mu^{+}, w/o timing' 'pl'
        legendEntry 'w/o timing' 'pl'              
        drawOptions 'APE'
</eff_noFTL>        
<eff_FTL_30ps>
        src num:comp_t_resolution.num_eff_FTL_30ps den:comp_t_resolution.den_eff
        operation 'Eff(num, den)'
        customize 'SetLineColor(kRed)' 'SetMarkerColor(kRed)'
        #legendEntry 'Z#rightarrow #mu^{-}#mu^{+}, #sigma_{t} = 30ps' 'pl'
        legendEntry '#sigma_{t} = 30ps' 'pl'              
        drawOptions 'PE'
</eff_FTL_30ps>
<eff_FTL_50ps>
        src num:comp_t_resolution.num_eff_FTL_50ps den:comp_t_resolution.den_eff
        operation 'Eff(num, den)'
        customize 'SetLineColor(kRed+1)' 'SetMarkerColor(kRed+1)'
        #legendEntry 'Z#rightarrow #mu^{-}#mu^{+}, #sigma_{t}  = 50ps' 'pl'
        legendEntry '#sigma_{t} = 50ps' 'pl'              
        drawOptions 'PE'
</eff_FTL_50ps>
<eff_FTL_70ps>
        src num:comp_t_resolution.num_eff_FTL_70ps den:comp_t_resolution.den_eff
        operation 'Eff(num, den)'
        customize 'SetLineColor(kRed+2)' 'SetMarkerColor(kRed+2)'
        #legendEntry 'Z#rightarrow #mu^{-}#mu^{+}, #sigma_{t} = 70ps' 'pl'
        legendEntry '#sigma_{t} = 70ps' 'pl'      
        drawOptions 'PE'
</eff_FTL_70ps>
<eff_FTL_90ps>
        src num:comp_t_resolution.num_eff_FTL_90ps den:comp_t_resolution.den_eff
        operation 'Eff(num, den)'
        customize 'SetLineColor(kRed+3)' 'SetMarkerColor(kRed+3)'
        #legendEntry 'Z#rightarrow #mu^{-}#mu^{+}, #sigma_{t}  = 90ps' 'pl'
        legendEntry '#sigma_{t}  = 90ps' 'pl'
        drawOptions 'PE'
</eff_FTL_90ps>

<fake_rate_noFTL>
        src num:comp_t_resolution.num_fake_rate_noFTL den:comp_t_resolution.den_fake_rate
        operation 'Eff(num, den)'
        customize 'SetTitle(";Density (events / mm);track isolation efficiency")' 'SetMarkerStyle(kOpenCircle)' 'SetMarkerSize(1.2)'
        legendEntry 't#bar{t}, 200PU' 'pl'
        drawOptions 'PE'
</fake_rate_noFTL>        
<fake_rate_FTL_30ps>
        src num:comp_t_resolution.num_fake_rate_FTL_30ps den:comp_t_resolution.den_fake_rate
        operation 'Eff(num, den)'
        customize 'SetLineColor(kRed)' 'SetMarkerColor(kRed)' 'SetMarkerStyle(kOpenCircle)'
        legendEntry 't#bar{t}, #sigma_{t} = 30ps' 'pl'
        drawOptions 'PE'
</fake_rate_FTL_30ps>       
<fake_rate_FTL_50ps>
        src num:comp_t_resolution.num_fake_rate_FTL_50ps den:comp_t_resolution.den_fake_rate
        operation 'Eff(num, den)'
        customize 'SetLineColor(kRed+1)' 'SetMarkerColor(kRed+1)' 'SetMarkerStyle(kOpenCircle)'
        legendEntry 't#bar{t}, #sigma_{t} = 50ps' 'pl'
        drawOptions 'PE'
</fake_rate_FTL_50ps>
<fake_rate_FTL_70ps>
        src num:comp_t_resolution.num_fake_rate_FTL_70ps den:comp_t_resolution.den_fake_rate
        operation 'Eff(num, den)'
        customize 'SetLineColor(kRed+2)' 'SetMarkerColor(kRed+2)' 'SetMarkerStyle(kOpenCircle)'
        legendEntry 't#bar{t}, #sigma_{t} = 70ps' 'pl'
        drawOptions 'PE'
</fake_rate_FTL_70ps>       
<fake_rate_FTL_90ps>
        src num:comp_t_resolution.num_fake_rate_FTL_90ps den:comp_t_resolution.den_fake_rate
        operation 'Eff(num, den)'
        customize 'SetLineColor(kRed+3)' 'SetMarkerColor(kRed+3)' 'SetMarkerStyle(kOpenCircle)'
        legendEntry 't#bar{t}, #sigma_{t} = 90ps' 'pl'
        drawOptions 'PE'
</fake_rate_FTL_90ps>

</comp_t_resolution>

### 0PU overcleaning check
<chIsoRatio>
legendXY 0.6 0.5 0.8 0.9
histos chIso_qcd
<chIso_qcd= chIso_zmm>
        src= qcd_src_0PU        
        var 'chIsoZTCut_3sigma/chIsoZCut'        
        cut 'pt>20 && abs(eta)<2.4 && chIsoDR < 0.35 && fabs(dz)<0.5 && fabs(dxy)<0.1'
        bins 100 0 2        
        customize 'SetTitle(";Iso_{z+t selection}/Iso_{z selection};Fraction of muons;")' \
                  'SetLineColor(kCyan+2)' 'Scale(1./this->GetEntries())' \
                  'GetYaxis()->SetLimits(0.001, 1.1)' 'SetMaximum(1.05)'
        legendEntry 'QCD, #sigma_{t} = 30 ps' 'l'
        drawOptions HIST
</chIso_qcd>
</chIsoRatio>
