<draw>
plots comp_fake_vs_sig_vs_linden_wp0p05 comp_fake_vs_sig_vs_linden_wp0p10 \
      comp_fake_vs_sig_vs_linden_wp0p15 comp_fake_vs_sig_vs_linden_wp0p20 \
      comp_fake_vs_sig_vs_linden_wp0p25 comp_fake_vs_sig_vs_linden_wp0p30 \
      comp_fake_vs_sig_vs_linden_wp0p35 comp_fake_vs_sig_vs_linden_wp0p40 \
      comp_fake_vs_sig_vs_linden_runwp \
      fake_vs_isocutZ_810 fake_vs_isocutZT_810 \
      eff_vs_isocutZ_810 eff_vs_isocutZT_810 \
      chIso

saveAs pdf png root
plugins 'roc_utils.py' 'rootlogon.C' 'gStyle->SetOptStat("")' 
outDir '$HOME/www/precision_timing/muon_iso/' 
</draw>

zmm_810_src '../ntuples/muon_iso_zmm.root' 'sig:muon_tree'
ttb_src '../ntuples/muon_iso_ttb.root' 'fake:muon_tree'

<roc_iso_ttb>
histos z_cut zt_cut z_cut_wp005 zt_cut_wp005 
<z_cut>
        src+= zmm_810_src ttb_src
        operation 'ROC(sig, fake, "chIsoDR < 0.35 && !vtxIsFake  && genMatchedPrompt==1 && eta > -5 && eta < 5 && pt > 20", "chIsoDR < 0.35 && !vtxIsFake  && genMatchedPrompt==0 && genMatchedJet==1 && eta > -5 && eta < 5 && pt > 20", "chIsoZCut/pt <=" , 100, 0, 1)'
        customize 'SetTitle(";#epsilon_{prompt};#epsilon_{non-prompt};")' 'SetLineColor(kCyan+2)' 'SetFillColor(kCyan+2)' \
                  'GetXaxis()->SetLimits(0, 1)' 'GetYaxis()->SetLimits(0, 1)'
        drawOptions 'ALE3'
</z_cut>
<z_cut_wp005>
        src+= zmm_810_src ttb_src
        operation 'ROC(sig, fake, "chIsoDR < 0.35 && !vtxIsFake  && genMatchedPrompt==1 && eta > -5 && eta < 5 && pt > 20", "chIsoDR < 0.35 && !vtxIsFake  && genMatchedPrompt==0 && genMatchedJet==1 && eta > -5 && eta < 5 && pt > 20", "chIsoZCut/pt <=" , 1, 0.0499, 0.0501)'
        customize 'SetMarkerColor(kRed+1)' 'SetMarkerStyle(kFullCircle)'
        drawOptions 'P'
</z_cut_wp005>

<zt_cut>
        src+= zmm_810_src ttb_src
        operation 'ROC(sig, fake, "chIsoDR < 0.35 && !vtxIsFake  && genMatchedPrompt==1 && eta > -5 && eta < 5 && pt > 20", "chIsoDR < 0.35 && !vtxIsFake  && genMatchedPrompt==0 && genMatchedJet==1 && eta > -5 && eta < 5 && pt > 20", "chIsoZTCut_3sigma/pt <=" , 100, 0, 1)'
        customize 'SetLineColor(kOrange+2)' 'SetFillColor(kOrange+2)'
        drawOptions 'LE3'
</zt_cut>
<zt_cut_wp005>
        src+= zmm_810_src ttb_src
        operation 'ROC(sig, fake, "chIsoDR < 0.35 && !vtxIsFake  && genMatchedPrompt==1 && eta > -5 && eta < 5 && pt > 20", "chIsoDR < 0.35 && !vtxIsFake  && genMatchedPrompt==0 && genMatchedJet==1 && eta > -5 && eta < 5 && pt > 20", "chIsoZTCut_3sigma/pt <=" , 1, 0.0499, 0.0501)'
        customize 'SetMarkerColor(kRed+1)' 'SetMarkerStyle(kFullCircle)'
        drawOptions 'P'
</zt_cut_wp005>
</roc_iso_ttb>

###---selection optimization
###---Z iso
<eff_vs_isocutZ_810>
customize 'macro:line.SetLineColor(kGray+1);line.SetLineStyle(7);line.SetLineWidth(2);line.DrawLine(0, 0.95, 0.5, 0.95)'
histos linden1 linden2 linden3 linden4
<linden1>
        src+= zmm_810_src
        operation 'EffScan(sig)'
        var 'chIsoZCut/pt'
        cut 'chIsoDR < 0.35 && !vtxIsFake  && genMatchedPrompt==1 && fabs(eta) < 5 && pt > 20 && abs(vtxZ) <= 2.0'
        bins 5000 0 0.5
        customize 'SetTitle(";Iso_{ch};#epsilon_{prompt};")' 'SetLineColor(kMagenta)' \
                  'SetAxisRange(0, 1.1)' 'SetMarkerSize(0)' 'GetXaxis()->SetNdivisions(507)'
        drawOptions 'HIST'
</linden1>
<linden2= eff_vs_isocutZ_810.linden1>
        cut 'chIsoDR < 0.35 && !vtxIsFake  && genMatchedPrompt==1 && fabs(eta) < 5 && pt > 20 && abs(vtxZ) <= 4.0 && abs(vtxZ) > 2.0'
        customize+= 'SetLineColor(kMagenta+1)'
</linden2>
<linden3= eff_vs_isocutZ_810.linden1>
        cut 'chIsoDR < 0.35 && !vtxIsFake  && genMatchedPrompt==1 && fabs(eta) < 5 && pt > 20 && abs(vtxZ) <= 6.0 && abs(vtxZ) > 4.0'
        customize+= 'SetLineColor(kMagenta+2)'
</linden3>
<linden4= eff_vs_isocutZ_810.linden1>
        cut 'chIsoDR < 0.35 && !vtxIsFake  && genMatchedPrompt==1 && fabs(eta) < 5 && pt > 20 && abs(vtxZ) > 6.0'
        customize+= 'SetLineColor(kMagenta+3)'
</linden4>
</eff_vs_isocutZ_810>

###---ZT iso
<eff_vs_isocutZT_810>
customize 'macro:line.SetLineColor(kGray+1);line.SetLineStyle(7);line.SetLineWidth(2);line.DrawLine(0, 0.95, 0.5, 0.95)'
histos linden1 linden2 linden3 linden4
<linden1>
        src+= zmm_810_src
        operation 'EffScan(sig)'
        var 'chIsoZTCut_3sigma/pt'
        cut 'chIsoDR < 0.35 && !vtxIsFake  && genMatchedPrompt==1 && fabs(eta) < 5 && pt > 20 && abs(vtxZ) <= 2.0'
        bins 5000 0 0.5
        customize 'SetTitle(";Iso_{ch};#epsilon_{prompt};")' 'SetLineColor(kMagenta)' \
                  'SetAxisRange(0, 1.1)' 'SetMarkerSize(0)' 'GetXaxis()->SetNdivisions(507)'
        drawOptions 'HIST'
</linden1>
<linden2= eff_vs_isocutZT_810.linden1>
        cut 'chIsoDR < 0.35 && !vtxIsFake  && genMatchedPrompt==1 && fabs(eta) < 5 && pt > 20 && abs(vtxZ) <= 4.0 && abs(vtxZ) > 2.0'
        customize+= 'SetLineColor(kMagenta+1)'
</linden2>
<linden3= eff_vs_isocutZT_810.linden1>
        cut 'chIsoDR < 0.35 && !vtxIsFake  && genMatchedPrompt==1 && fabs(eta) < 5 && pt > 20 && abs(vtxZ) <= 6.0 && abs(vtxZ) > 4.0'
        customize+= 'SetLineColor(kMagenta+2)'
</linden3>
<linden4= eff_vs_isocutZT_810.linden1>
        cut 'chIsoDR < 0.35 && !vtxIsFake  && genMatchedPrompt==1 && fabs(eta) < 5 && pt > 20 && abs(vtxZ) > 6.0'
        customize+= 'SetLineColor(kMagenta+3)'
</linden4>
</eff_vs_isocutZT_810>

### fake rate, eff comp
linden_bins 0.0 0.788561 1.14142 1.42500 1.54

<comp_fake_vs_sig_vs_linden_wp0p05>
customize 'macro:gStyle->SetErrorX(0.5)'
legendHeader 'WP=0.05'
legendXY 0.2 0.4 0.6 0.7
histos eff_noFTL eff_FTL fake_rate_noFTL fake_rate_FTL

<num_fake_rate_noFTL>
        src= ttb_src
        var '200*TMath::Gaus(abs(10*vtxZ), 0, 52., 1)'
        cut 'chIsoDR < 0.35 && !vtxIsFake  && genMatchedPrompt==0 && genMatchedJet==1 && fabs(eta) < 5 && pt>20 && chIsoZCut/pt<0.05'
        dbins linden_bins
</num_fake_rate_noFTL>
<num_fake_rate_FTL= comp_fake_vs_sig_vs_linden_wp0p05.num_fake_rate_noFTL>
        cut 'chIsoDR < 0.35 && !vtxIsFake  && genMatchedPrompt==0 && genMatchedJet==1 && fabs(eta) < 5 && pt>20 && chIsoZTCut_3sigma/pt<0.05'
</num_fake_rate_FTL>
<den_fake_rate= comp_fake_vs_sig_vs_linden_wp0p05.num_fake_rate_noFTL>
        cut 'chIsoDR < 0.35 && !vtxIsFake  && genMatchedPrompt==0 && genMatchedJet==1 && fabs(eta) < 5 && pt>20'
</den_fake_rate>

<num_eff_noFTL>
        src= zmm_810_src
        var '200*TMath::Gaus(abs(10*vtxZ), 0, 52., 1)'
        cut 'chIsoDR < 0.35 && !vtxIsFake  && genMatchedPrompt==1 && fabs(eta) < 5 && pt>20 && chIsoZCut/pt<0.05'
        dbins linden_bins
</num_eff_noFTL>
<num_eff_FTL= comp_fake_vs_sig_vs_linden_wp0p05.num_eff_noFTL>
        cut 'chIsoDR < 0.35 && !vtxIsFake  && genMatchedPrompt==1 && fabs(eta) < 5 && pt>20 && chIsoZTCut_3sigma/pt<0.05'
</num_eff_FTL>
<den_eff= comp_fake_vs_sig_vs_linden_wp0p05.num_eff_noFTL>
        cut 'chIsoDR < 0.35 && !vtxIsFake  && genMatchedPrompt==1 && fabs(eta) < 5 && pt>20'
</den_eff>

<eff_noFTL>
        src num:comp_fake_vs_sig_vs_linden_wp0p05.num_eff_noFTL den:comp_fake_vs_sig_vs_linden_wp0p05.den_eff
        operation 'Eff(num, den)'
        customize 'SetTitle(";density (events / mm);track isolation efficiency")' 
        legendEntry 'Z#rightarrow #mu^{-}#mu^{+}, 200PU' 'pl'
        drawOptions 'APE'
</eff_noFTL>        
<eff_FTL>
        src num:comp_fake_vs_sig_vs_linden_wp0p05.num_eff_FTL den:comp_fake_vs_sig_vs_linden_wp0p05.den_eff
        operation 'Eff(num, den)'
        customize 'SetLineColor(kRed+1)' 'SetMarkerColor(kRed+1)'
        legendEntry 'Z#rightarrow #mu^{-}#mu^{+}, 200PU timing' 'pl'
        drawOptions 'PE'
</eff_FTL>

<fake_rate_noFTL>
        src num:comp_fake_vs_sig_vs_linden_wp0p05.num_fake_rate_noFTL den:comp_fake_vs_sig_vs_linden_wp0p05.den_fake_rate
        operation 'Eff(num, den)'
        customize 'SetTitle(";density (events / mm);track isolation efficiency")' 'SetMarkerStyle(kOpenCircle)'
        legendEntry 't#bar{t}, 200PU' 'pl'
        drawOptions 'PE'
</fake_rate_noFTL>        
<fake_rate_FTL>
        src num:comp_fake_vs_sig_vs_linden_wp0p05.num_fake_rate_FTL den:comp_fake_vs_sig_vs_linden_wp0p05.den_fake_rate
        operation 'Eff(num, den)'
        customize 'SetLineColor(kRed+1)' 'SetMarkerColor(kRed+1)' 'SetMarkerStyle(kOpenCircle)'
        legendEntry 't#bar{t}, 200PU timing' 'pl'
        drawOptions 'PE'
</fake_rate_FTL>

</comp_fake_vs_sig_vs_linden_wp0p05>

<comp_fake_vs_sig_vs_linden_wp0p10= comp_fake_vs_sig_vs_linden_wp0p05>
legendHeader 'WP=0.1'
num_fake_rate_noFTL.cut 'chIsoDR < 0.35 && !vtxIsFake  && genMatchedPrompt==0 && genMatchedJet==1 && fabs(eta) < 5 && pt>20 && chIsoZCut/pt<0.1'
num_fake_rate_FTL.cut 'chIsoDR < 0.35 && !vtxIsFake  && genMatchedPrompt==0 && genMatchedJet==1 && fabs(eta) < 5 && pt>20 && chIsoZTCut_3sigma/pt<0.1'
num_eff_noFTL.cut 'chIsoDR < 0.35 && !vtxIsFake  && genMatchedPrompt==1 && fabs(eta) < 5 && pt>20 && chIsoZCut/pt<0.1'
num_eff_FTL.cut 'chIsoDR < 0.35 && !vtxIsFake  && genMatchedPrompt==1 && fabs(eta) < 5 && pt>20 && chIsoZTCut_3sigma/pt<0.1'
eff_noFTL.src num:comp_fake_vs_sig_vs_linden_wp0p10.num_eff_noFTL den:comp_fake_vs_sig_vs_linden_wp0p10.den_eff
eff_FTL.src num:comp_fake_vs_sig_vs_linden_wp0p10.num_eff_FTL den:comp_fake_vs_sig_vs_linden_wp0p10.den_eff
fake_rate_noFTL.src num:comp_fake_vs_sig_vs_linden_wp0p10.num_fake_rate_noFTL den:comp_fake_vs_sig_vs_linden_wp0p10.den_fake_rate
fake_rate_FTL.src num:comp_fake_vs_sig_vs_linden_wp0p10.num_fake_rate_FTL den:comp_fake_vs_sig_vs_linden_wp0p10.den_fake_rate
</comp_fake_vs_sig_vs_linden_wp0p10>

<comp_fake_vs_sig_vs_linden_wp0p15= comp_fake_vs_sig_vs_linden_wp0p05>
legendHeader 'WP=0.15'
num_fake_rate_noFTL.cut 'chIsoDR < 0.35 && !vtxIsFake  && genMatchedPrompt==0 && genMatchedJet==1 && fabs(eta) < 5 && pt>20 && chIsoZCut/pt<0.15'
num_fake_rate_FTL.cut 'chIsoDR < 0.35 && !vtxIsFake  && genMatchedPrompt==0 && genMatchedJet==1 && fabs(eta) < 5 && pt>20 && chIsoZTCut_3sigma/pt<0.15'
num_eff_noFTL.cut 'chIsoDR < 0.35 && !vtxIsFake  && genMatchedPrompt==1 && fabs(eta) < 5 && pt>20 && chIsoZCut/pt<0.15'
num_eff_FTL.cut 'chIsoDR < 0.35 && !vtxIsFake  && genMatchedPrompt==1 && fabs(eta) < 5 && pt>20 && chIsoZTCut_3sigma/pt<0.15'
eff_noFTL.src num:comp_fake_vs_sig_vs_linden_wp0p15.num_eff_noFTL den:comp_fake_vs_sig_vs_linden_wp0p15.den_eff
eff_FTL.src num:comp_fake_vs_sig_vs_linden_wp0p15.num_eff_FTL den:comp_fake_vs_sig_vs_linden_wp0p15.den_eff
fake_rate_noFTL.src num:comp_fake_vs_sig_vs_linden_wp0p15.num_fake_rate_noFTL den:comp_fake_vs_sig_vs_linden_wp0p15.den_fake_rate
fake_rate_FTL.src num:comp_fake_vs_sig_vs_linden_wp0p15.num_fake_rate_FTL den:comp_fake_vs_sig_vs_linden_wp0p15.den_fake_rate
</comp_fake_vs_sig_vs_linden_wp0p15>

<comp_fake_vs_sig_vs_linden_wp0p20= comp_fake_vs_sig_vs_linden_wp0p05>
legendHeader 'WP=0.2'
num_fake_rate_noFTL.cut 'chIsoDR < 0.35 && !vtxIsFake  && genMatchedPrompt==0 && genMatchedJet==1 && fabs(eta) < 5 && pt>20 && chIsoZCut/pt<0.20'
num_fake_rate_FTL.cut 'chIsoDR < 0.35 && !vtxIsFake  && genMatchedPrompt==0 && genMatchedJet==1 && fabs(eta) < 5 && pt>20 && chIsoZTCut_3sigma/pt<0.20'
num_eff_noFTL.cut 'chIsoDR < 0.35 && !vtxIsFake  && genMatchedPrompt==1 && fabs(eta) < 5 && pt>20 && chIsoZCut/pt<0.20'
num_eff_FTL.cut 'chIsoDR < 0.35 && !vtxIsFake  && genMatchedPrompt==1 && fabs(eta) < 5 && pt>20 && chIsoZTCut_3sigma/pt<0.20'
eff_noFTL.src num:comp_fake_vs_sig_vs_linden_wp0p20.num_eff_noFTL den:comp_fake_vs_sig_vs_linden_wp0p20.den_eff
eff_FTL.src num:comp_fake_vs_sig_vs_linden_wp0p20.num_eff_FTL den:comp_fake_vs_sig_vs_linden_wp0p20.den_eff
fake_rate_noFTL.src num:comp_fake_vs_sig_vs_linden_wp0p20.num_fake_rate_noFTL den:comp_fake_vs_sig_vs_linden_wp0p20.den_fake_rate
fake_rate_FTL.src num:comp_fake_vs_sig_vs_linden_wp0p20.num_fake_rate_FTL den:comp_fake_vs_sig_vs_linden_wp0p20.den_fake_rate
</comp_fake_vs_sig_vs_linden_wp0p20>

<comp_fake_vs_sig_vs_linden_wp0p25= comp_fake_vs_sig_vs_linden_wp0p05>
legendHeader 'WP=0.25'
num_fake_rate_noFTL.cut 'chIsoDR < 0.35 && !vtxIsFake  && genMatchedPrompt==0 && genMatchedJet==1 && fabs(eta) < 5 && pt>20 && chIsoZCut/pt<0.25'
num_fake_rate_FTL.cut 'chIsoDR < 0.35 && !vtxIsFake  && genMatchedPrompt==0 && genMatchedJet==1 && fabs(eta) < 5 && pt>20 && chIsoZTCut_3sigma/pt<0.25'
num_eff_noFTL.cut 'chIsoDR < 0.35 && !vtxIsFake  && genMatchedPrompt==1 && fabs(eta) < 5 && pt>20 && chIsoZCut/pt<0.25'
num_eff_FTL.cut 'chIsoDR < 0.35 && !vtxIsFake  && genMatchedPrompt==1 && fabs(eta) < 5 && pt>20 && chIsoZTCut_3sigma/pt<0.25'
eff_noFTL.src num:comp_fake_vs_sig_vs_linden_wp0p25.num_eff_noFTL den:comp_fake_vs_sig_vs_linden_wp0p25.den_eff
eff_FTL.src num:comp_fake_vs_sig_vs_linden_wp0p25.num_eff_FTL den:comp_fake_vs_sig_vs_linden_wp0p25.den_eff
fake_rate_noFTL.src num:comp_fake_vs_sig_vs_linden_wp0p25.num_fake_rate_noFTL den:comp_fake_vs_sig_vs_linden_wp0p25.den_fake_rate
fake_rate_FTL.src num:comp_fake_vs_sig_vs_linden_wp0p25.num_fake_rate_FTL den:comp_fake_vs_sig_vs_linden_wp0p25.den_fake_rate
</comp_fake_vs_sig_vs_linden_wp0p25>

<comp_fake_vs_sig_vs_linden_wp0p30= comp_fake_vs_sig_vs_linden_wp0p05>
legendHeader 'WP=0.3'
num_fake_rate_noFTL.cut 'chIsoDR < 0.35 && !vtxIsFake  && genMatchedPrompt==0 && genMatchedJet==1 && fabs(eta) < 5 && pt>20 && chIsoZCut/pt<0.30'
num_fake_rate_FTL.cut 'chIsoDR < 0.35 && !vtxIsFake  && genMatchedPrompt==0 && genMatchedJet==1 && fabs(eta) < 5 && pt>20 && chIsoZTCut_3sigma/pt<0.30'
num_eff_noFTL.cut 'chIsoDR < 0.35 && !vtxIsFake  && genMatchedPrompt==1 && fabs(eta) < 5 && pt>20 && chIsoZCut/pt<0.30'
num_eff_FTL.cut 'chIsoDR < 0.35 && !vtxIsFake  && genMatchedPrompt==1 && fabs(eta) < 5 && pt>20 && chIsoZTCut_3sigma/pt<0.30'
eff_noFTL.src num:comp_fake_vs_sig_vs_linden_wp0p30.num_eff_noFTL den:comp_fake_vs_sig_vs_linden_wp0p30.den_eff
eff_FTL.src num:comp_fake_vs_sig_vs_linden_wp0p30.num_eff_FTL den:comp_fake_vs_sig_vs_linden_wp0p30.den_eff
fake_rate_noFTL.src num:comp_fake_vs_sig_vs_linden_wp0p30.num_fake_rate_noFTL den:comp_fake_vs_sig_vs_linden_wp0p30.den_fake_rate
fake_rate_FTL.src num:comp_fake_vs_sig_vs_linden_wp0p30.num_fake_rate_FTL den:comp_fake_vs_sig_vs_linden_wp0p30.den_fake_rate
</comp_fake_vs_sig_vs_linden_wp0p30>

<comp_fake_vs_sig_vs_linden_wp0p35= comp_fake_vs_sig_vs_linden_wp0p05>
legendHeader 'WP=0.35'
num_fake_rate_noFTL.cut 'chIsoDR < 0.35 && !vtxIsFake  && genMatchedPrompt==0 && genMatchedJet==1 && fabs(eta) < 5 && pt>20 && chIsoZCut/pt<0.35'
num_fake_rate_FTL.cut 'chIsoDR < 0.35 && !vtxIsFake  && genMatchedPrompt==0 && genMatchedJet==1 && fabs(eta) < 5 && pt>20 && chIsoZTCut_3sigma/pt<0.35'
num_eff_noFTL.cut 'chIsoDR < 0.35 && !vtxIsFake  && genMatchedPrompt==1 && fabs(eta) < 5 && pt>20 && chIsoZCut/pt<0.35'
num_eff_FTL.cut 'chIsoDR < 0.35 && !vtxIsFake  && genMatchedPrompt==1 && fabs(eta) < 5 && pt>20 && chIsoZTCut_3sigma/pt<0.35'
eff_noFTL.src num:comp_fake_vs_sig_vs_linden_wp0p35.num_eff_noFTL den:comp_fake_vs_sig_vs_linden_wp0p35.den_eff
eff_FTL.src num:comp_fake_vs_sig_vs_linden_wp0p35.num_eff_FTL den:comp_fake_vs_sig_vs_linden_wp0p35.den_eff
fake_rate_noFTL.src num:comp_fake_vs_sig_vs_linden_wp0p35.num_fake_rate_noFTL den:comp_fake_vs_sig_vs_linden_wp0p35.den_fake_rate
fake_rate_FTL.src num:comp_fake_vs_sig_vs_linden_wp0p35.num_fake_rate_FTL den:comp_fake_vs_sig_vs_linden_wp0p35.den_fake_rate
</comp_fake_vs_sig_vs_linden_wp0p35>

<comp_fake_vs_sig_vs_linden_wp0p40= comp_fake_vs_sig_vs_linden_wp0p05>
legendHeader 'WP=0.4'
num_fake_rate_noFTL.cut 'chIsoDR < 0.35 && !vtxIsFake  && genMatchedPrompt==0 && genMatchedJet==1 && fabs(eta) < 5 && pt>20 && chIsoZCut/pt<0.40'
num_fake_rate_FTL.cut 'chIsoDR < 0.35 && !vtxIsFake  && genMatchedPrompt==0 && genMatchedJet==1 && fabs(eta) < 5 && pt>20 && chIsoZTCut_3sigma/pt<0.40'
num_eff_noFTL.cut 'chIsoDR < 0.35 && !vtxIsFake  && genMatchedPrompt==1 && fabs(eta) < 5 && pt>20 && chIsoZCut/pt<0.40'
num_eff_FTL.cut 'chIsoDR < 0.35 && !vtxIsFake  && genMatchedPrompt==1 && fabs(eta) < 5 && pt>20 && chIsoZTCut_3sigma/pt<0.40'
eff_noFTL.src num:comp_fake_vs_sig_vs_linden_wp0p40.num_eff_noFTL den:comp_fake_vs_sig_vs_linden_wp0p40.den_eff
eff_FTL.src num:comp_fake_vs_sig_vs_linden_wp0p40.num_eff_FTL den:comp_fake_vs_sig_vs_linden_wp0p40.den_eff
fake_rate_noFTL.src num:comp_fake_vs_sig_vs_linden_wp0p40.num_fake_rate_noFTL den:comp_fake_vs_sig_vs_linden_wp0p40.den_fake_rate
fake_rate_FTL.src num:comp_fake_vs_sig_vs_linden_wp0p40.num_fake_rate_FTL den:comp_fake_vs_sig_vs_linden_wp0p40.den_fake_rate
</comp_fake_vs_sig_vs_linden_wp0p40>

<comp_fake_vs_sig_vs_linden_runwp= comp_fake_vs_sig_vs_linden_wp0p05>
legendHeader 'Running WP (#epsilon_{prompt} = 95%)' 
num_fake_rate_noFTL.cut 'chIsoDR < 0.35 && !vtxIsFake  && genMatchedPrompt==0 && genMatchedJet==1 && fabs(eta) < 5 && pt>20 && ((abs(vtxZ) <= 2.0 && chIsoZCut/pt<0.103) || (abs(vtxZ) <= 4.0 && abs(vtxZ) > 2.0 && chIsoZCut/pt<0.096) || (abs(vtxZ) <= 6.0 && abs(vtxZ) > 4.0 && chIsoZCut/pt<0.080) || (abs(vtxZ) > 6.0 && chIsoZCut/pt<0.061))'
num_fake_rate_FTL.cut 'chIsoDR < 0.35 && !vtxIsFake  && genMatchedPrompt==0 && genMatchedJet==1 && fabs(eta) < 5 && pt>20 && ((abs(vtxZ) <= 2.0 && chIsoZTCut_3sigma/pt<0.066) || (abs(vtxZ) <= 4.0 && abs(vtxZ) > 2.0 && chIsoZTCut_3sigma/pt<0.064) || (abs(vtxZ) <= 6.0 && abs(vtxZ) > 4.0 && chIsoZTCut_3sigma/pt<0.060) || (abs(vtxZ) > 6.0 && chIsoZTCut_3sigma/pt<0.052))'
num_eff_noFTL.cut 'chIsoDR < 0.35 && !vtxIsFake  && genMatchedPrompt==1 && fabs(eta) < 5 && pt>20 && ((abs(vtxZ) <= 2.0 && chIsoZCut/pt<0.103) || (abs(vtxZ) <= 4.0 && abs(vtxZ) > 2.0 && chIsoZCut/pt<0.096) || (abs(vtxZ) <= 6.0 && abs(vtxZ) > 4.0 && chIsoZCut/pt<0.080) || (abs(vtxZ) > 6.0 && chIsoZCut/pt<0.061))'
num_eff_FTL.cut 'chIsoDR < 0.35 && !vtxIsFake  && genMatchedPrompt==1 && fabs(eta) < 5 && pt>20 && ((abs(vtxZ) <= 2.0 && chIsoZTCut_3sigma/pt<0.066) || (abs(vtxZ) <= 4.0 && abs(vtxZ) > 2.0 && chIsoZTCut_3sigma/pt<0.064) || (abs(vtxZ) <= 6.0 && abs(vtxZ) > 4.0 && chIsoZTCut_3sigma/pt<0.060) || (abs(vtxZ) > 6.0 && chIsoZTCut_3sigma/pt<0.053))'
eff_noFTL.src num:comp_fake_vs_sig_vs_linden_runwp.num_eff_noFTL den:comp_fake_vs_sig_vs_linden_runwp.den_eff
eff_FTL.src num:comp_fake_vs_sig_vs_linden_runwp.num_eff_FTL den:comp_fake_vs_sig_vs_linden_runwp.den_eff
fake_rate_noFTL.src num:comp_fake_vs_sig_vs_linden_runwp.num_fake_rate_noFTL den:comp_fake_vs_sig_vs_linden_runwp.den_fake_rate
fake_rate_FTL.src num:comp_fake_vs_sig_vs_linden_runwp.num_fake_rate_FTL den:comp_fake_vs_sig_vs_linden_runwp.den_fake_rate
</comp_fake_vs_sig_vs_linden_runwp>

### chIsoZ chIsoZT comparison
<chIso>
customize 
histos chIsoZ_zmm chIsoZT_zmm chIsoZ_ttb chIsoZT_ttb 
<chIsoZ_zmm>
        src= zmm_810_src
        var 'chIsoZCut/pt'
        cut 'pt>20 && abs(eta)<5 && chIsoDR < 0.35 && !vtxIsFake  && genMatchedPrompt==1'
        bins 50 0 2
        customize 'SetTitle(";Iso/pt")' 'Scale(1./this->GetEntries())' 'GetYaxis()->SetLimits(0.001, 1)'
        drawOptions HIST
</chIsoZ_zmm>
<chIsoZT_zmm= chIso.chIsoZ_zmm>
        var 'chIsoZTCut_3sigma/pt'
        customize+= 'SetLineStyle(7)'
</chIsoZT_zmm>
<chIsoZ_ttb>
        src= ttb_src
        var 'chIsoZCut/pt'
        cut 'pt>20 && abs(eta)<5 && chIsoDR < 0.35 && !vtxIsFake  && genMatchedPrompt==0 && genMatchedJet==1'
        bins 50 0 2
        customize 'SetTitle(";Iso/pt")' 'SetLineColor(kCyan+2)' 'Scale(1./this->GetEntries())' 'GetYaxis()->SetLimits(0.001, 1)'
        drawOptions HIST
</chIsoZ_ttb>
<chIsoZT_ttb= chIso.chIsoZ_ttb>
        var 'chIsoZTCut_3sigma/pt'
        customize+= 'SetLineColor(kOrange+2)'
</chIsoZT_ttb>
</chIso>

###---fake rate vs iso
###---Z iso
<fake_vs_isocutZ_810>
customize 'SetGrid()'
#customize 'macro:line.SetLineColor(kGray+1);line.SetLineStyle(7);line.SetLineWidth(2);line.DrawLine(0, 0.95, 0.5, 0.95)'
histos linden1 linden2 linden3 linden4
<linden1>
        src+= ttb_src
        operation 'EffScan(fake)'
        var '(chIsoZCut/pt<0.5)*chIsoZCut/pt + 0.45*(chIsoZCut/pt>=0.5)'
        cut 'chIsoDR < 0.35 && !vtxIsFake  && genMatchedPrompt==0 && genMatchedJet==1 && fabs(eta) < 5 && pt > 20 && abs(vtxZ) <= 2.0'
        bins 5000 0 0.5
        customize 'SetTitle(";Iso_{ch};#epsilon_{prompt};")' 'SetLineColor(kMagenta)' \
                  'SetAxisRange(0, 1.1)' 'SetMarkerSize(0)' 'GetXaxis()->SetNdivisions(507)'
        drawOptions 'HIST'
</linden1>
<linden2= fake_vs_isocutZ_810.linden1>
        cut 'chIsoDR < 0.35 && !vtxIsFake  && genMatchedPrompt==0 && genMatchedJet==1 && fabs(eta) < 5 && pt > 20 && abs(vtxZ) <= 4.0 && abs(vtxZ) > 2.0'
        customize+= 'SetLineColor(kMagenta+1)'
</linden2>
<linden3= fake_vs_isocutZ_810.linden1>
        cut 'chIsoDR < 0.35 && !vtxIsFake  && genMatchedPrompt==0 && genMatchedJet==1 && fabs(eta) < 5 && pt > 20 && abs(vtxZ) <= 6.0 && abs(vtxZ) > 4.0'
        customize+= 'SetLineColor(kMagenta+2)'
</linden3>
<linden4= fake_vs_isocutZ_810.linden1>
        cut 'chIsoDR < 0.35 && !vtxIsFake  && genMatchedPrompt==0 && genMatchedJet==1 && fabs(eta) < 5 && pt > 20 && abs(vtxZ) > 6.0'
        customize+= 'SetLineColor(kMagenta+3)'
</linden4>
</fake_vs_isocutZ_810>

###---ZT iso
<fake_vs_isocutZT_810>
customize 'SetGrid()'
#'macro:line.SetLineColor(kGray+1);line.SetLineStyle(7);line.SetLineWidth(2);line.DrawLine(0, 0.95, 0.5, 0.95)'
histos linden1 linden2 linden3 linden4
<linden1>
        src= ttb_src
        operation 'EffScan(fake)'
        var '(chIsoZTCut_3sigma/pt<0.5)*chIsoZTCut_3sigma/pt + 0.45*(chIsoZTCut_3sigma/pt>=0.5)'
        cut 'chIsoDR < 0.35 && !vtxIsFake  && genMatchedPrompt==0 && genMatchedJet==1 && fabs(eta) < 5 && pt > 20 && abs(vtxZ) <= 2.0'
        bins 5000 0 0.5
        customize 'SetTitle(";Iso_{ch};#epsilon_{prompt};")' 'SetLineColor(kMagenta)' \
                  'SetAxisRange(0, 1.1)' 'SetMarkerSize(0)' 'GetXaxis()->SetNdivisions(507)'
        drawOptions 'HIST'
</linden1>
<linden2= fake_vs_isocutZT_810.linden1>
        cut 'chIsoDR < 0.35 && !vtxIsFake  && genMatchedPrompt==0 && genMatchedJet==1 && fabs(eta) < 5 && pt > 20 && abs(vtxZ) <= 4.0 && abs(vtxZ) > 2.0'
        customize+= 'SetLineColor(kMagenta+1)'
</linden2>
<linden3= fake_vs_isocutZT_810.linden1>
        cut 'chIsoDR < 0.35 && !vtxIsFake  && genMatchedPrompt==0 && genMatchedJet==1 && fabs(eta) < 5 && pt > 20 && abs(vtxZ) <= 6.0 && abs(vtxZ) > 4.0'
        customize+= 'SetLineColor(kMagenta+2)'
</linden3>
<linden4= fake_vs_isocutZT_810.linden1>
        cut 'chIsoDR < 0.35 && !vtxIsFake  && genMatchedPrompt==0 && genMatchedJet==1 && fabs(eta) < 5 && pt > 20 && abs(vtxZ) > 6.0'
        customize+= 'SetLineColor(kMagenta+3)'
</linden4>
</fake_vs_isocutZT_810>
